



Network Working Group                                       M. Engelbart
Internet-Draft                                                    J. Ott
Intended status: Experimental             Technical University of Munich
Expires: 2 January 2025                                      1 July 2024


                       RoQ qlog event definitions
                 draft-engelbart-qlog-roq-events-latest

Abstract

   This document describes concrete qlog event definitions and their
   metadata for RTP over QUIC [I-D.draft-ietf-avtcore-rtp-over-quic]
   related events.  These events can then be embedded in the higher
   level schema defined in [I-D.draft-ietf-quic-qlog-main-schema].

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://mengelbart.github.io/draft-engelbart-qlog-roq-events/draft-
   engelbart-qlog-roq-events.html.  Status information for this document
   may be found at https://datatracker.ietf.org/doc/draft-engelbart-
   qlog-roq-events/.

   Source for this draft and an issue tracker can be found at
   https://github.com/mengelbart/draft-engelbart-qlog-roq-events.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 2 January 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Overview
     3.1.  Usage with QUIC
   4.  RoQ Event Overview
   5.  RoQ Events
     5.1.  RoQ Stream Opened
     5.2.  RoQ Stream Packet Created
     5.3.  RoQ Stream Packet Parsed
     5.4.  RoQ Datagram Packet Created
     5.5.  RoQ Datagram Packet Parsed
   6.  RoQ Data Field Definitions
     6.1.  RoQ Packet
     6.2.  RoQ Application Error
   7.  Security Considerations
   8.  IANA Considerations
   9.  Normative References
   Acknowledgments
   Authors' Addresses

1.  Introduction

   This document describes the values of the qlog name ("category" +
   "event") and "data" fields and their semantics for RTP over QUIC
   ([I-D.draft-ietf-avtcore-rtp-over-quic]).

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   The event and data structure definitions in this document are
   expressed in the Concise Data Definition Language [RFC8610] and its
   extensions described in [I-D.draft-ietf-quic-qlog-main-schema].

   *TODO: Check if we need all these imports:*

   The following fields from [I-D.draft-ietf-quic-qlog-main-schema] are
   imported and used: name, category, type, data, group_id,
   protocol_type, importance, RawInfo, and time-related fields.

   As is the case for [I-D.draft-ietf-quic-qlog-main-schema], the qlog
   schema definitions in this document are intentionally agnostic to
   serialization formats.  The choice of format is an implementation
   decision.

3.  Overview

   This document describes how RoQ can be expressed in qlog using the
   schema defined in [I-D.draft-ietf-quic-qlog-main-schema].  RoQ events
   are defined with a category, a name (the concatenation of "category"
   and "event"), an "importance", and "data" fields.

   When any event from this document is included in a qlog trace, the
   "protocol_type" qlog array field MUST contain an entry with the value
   "RoQ".

3.1.  Usage with QUIC

   The events described in this document can be used with or without
   logging the related QUIC events defined in
   [I-D.draft-ietf-quic-qlog-quic-events].  If used with QUIC events,
   the QUIC document takes precedence in terms of recommended filenames
   and trace separation setups.

   If used without QUIC events, it is recommended that the
   implementation assign a globally unique identifier to each RoQ
   connection.  This identifier can then be used as the value of the
   qlog "group_id" field, as well as the qlog filename or file
   identifier, potentially suffixed by the vantagepoint type (For
   example, abcd1234_server.qlog would contain the server-side trace of
   the connection with identifier abcd1234).

4.  RoQ Event Overview

   This document defines events in the roq category.

   As described in Section 3.4.2 of
   [I-D.draft-ietf-quic-qlog-main-schema], the qlog "name" field is the
   concatenation of category and type.

   Table 1 summarizes the name value of each event type that is defined
   in this specification.

        +=============================+============+=============+
        | Name value                  | Importance | Definition  |
        +=============================+============+=============+
        | roq:stream_opened           | Base       | Section 5.1 |
        +-----------------------------+------------+-------------+
        | roq:stream_packet_created   | Core       | Section 5.2 |
        +-----------------------------+------------+-------------+
        | roq:stream_packet_parsed    | Core       | Section 5.3 |
        +-----------------------------+------------+-------------+
        | roq:datagram_packet_created | Core       | Section 5.4 |
        +-----------------------------+------------+-------------+
        | roq:datagram_packet_parsed  | Core       | Section 5.5 |
        +-----------------------------+------------+-------------+

                           Table 1: RoQ Events

5.  RoQ Events

   RoQ events extend the $ProtocolEventData extension point defined in
   [I-D.draft-ietf-quic-qlog-main-schema].

   RoQEventData = RoQStreamOpened /
                  RoQStreamPacketCreated /
                  RoQStreamPacketParsed /
                  RoQDatagramPacketCreated /
                  RoQDatagramPacketParsed

   $ProtocolEventData /= RoQEventData

     Figure 1: RoQEventData definition and ProtocolEventData extension

   RoQ events are logged when a certain condition happens at the
   application layer, and there isn't always a one to one mapping
   between RoQ and QUIC events.  The exchange of data between the RoQ
   and QUIC layer is logged via the "stream_data_moved" and
   "datagram_data_moved" events in
   [I-D.draft-ietf-quic-qlog-quic-events].

5.1.  RoQ Stream Opened

   The stream_opened event is emitted when a new QUIC stream for sending
   RoQ packets is opened.  It has Base importance level; see Section 9.2
   of [I-D.draft-ietf-quic-qlog-main-schema].

   RoQStreamOpened = {
       flow_id: uint64
       stream_id: uint64
   }

                    Figure 2: RoQStreamOpened definition

5.2.  RoQ Stream Packet Created

   The stream_packet_created event is emitted when a RoQ packet to be
   sent on a QUIC stream is created.  It has Core importance level; see
   Section 9.2 of [I-D.draft-ietf-quic-qlog-main-schema].

   This event is not necessarily the same as when the packet is passed
   to the QUIC layer.  For that, see the stream_data_moved event in
   [I-D.draft-ietf-quic-qlog-quic-events].

   RoQStreamPacketCreated = {
       ~RoQPacket
       stream_id: uint64
   }

                Figure 3: RoQStreamPacketCreated definition

5.3.  RoQ Stream Packet Parsed

   The stream_packet_parsed event is emitted when a RoQ packet received
   from a QUIC stream is parsed.  It has Core importance level; see
   Section 92. of [I-D.draft-ietf-quic-qlog-main-schema].

   The event is not necessarily the same as when the packet is received
   from the QUIC layer.  For that see stream_data_moved event in
   [I-D.draft-ietf-quic-qlog-quic-events].

   RoQStreamPacketParsed = {
       ~RoQPacket
       stream_id: uint64
   }

                 Figure 4: RoQStreamPacketParsed definition

5.4.  RoQ Datagram Packet Created

   The roq_datagram_packet_created event is emitted when a RoQ packet to
   be sent in a QUIC Datagram is created.  It has Core importance level;
   see Section 9.2 of [I-D.draft-ietf-quic-qlog-main-schema].

   This event is not necessarily the same as when the packet is passed
   to the QUIC layer.  For that, see the datagram_data_moved event in
   [I-D.draft-ietf-quic-qlog-quic-events].

   RoQDatagramPacketCreated = {
       ~RoQPacket
   }

               Figure 5: RoQDatagramPacketCreated definition

5.5.  RoQ Datagram Packet Parsed

   The datagram_packet_parsed event is emitted when a RoQ packet
   received in a QUIC Datagram is parsed.  It has Core importance level;
   see Section 92. of [I-D.draft-ietf-quic-qlog-main-schema].

   The event is not necessarily the same as when the packet is received
   from the QUIC layer.  For that see datagram_data_moved event in
   [I-D.draft-ietf-quic-qlog-quic-events].

   RoQDatagramPacketParsed = {
       ~RoQPacket
   }

                Figure 6: RoQDatagramPacketParsed definition

6.  RoQ Data Field Definitions

   The following data field definitions can be used in RoQ events.

6.1.  RoQ Packet

   RoQPacket = {
     flow_id: uint64
     length: uint64
   }

                       Figure 7: RoQPacket definition

6.2.  RoQ Application Error

   RoQApplicationError = "roq_no_error" /
                         "roq_general_error" /
                         "roq_internal_error" /
                         "roq_packet_error" /
                         "roq_stream_creation_error" /
                         "roq_frame_cancelled_error" /
                         "roq_unknown_flow_id_error" /
                         "roq_expectation_unmet_error"

                  Figure 8: RoQApplicationError definition

   The RoQApplicationError extends the general $ApplicationError
   definition in the qlog QUIC definition, see
   [I-D.draft-ietf-quic-qlog-main-schema].

   $ApplicationError /= RoQApplicationError

7.  Security Considerations

   The security and privacy considerations discussed in
   [I-D.draft-ietf-quic-qlog-main-schema] apply to this document as
   well.

8.  IANA Considerations

   TODO

9.  Normative References

   [I-D.draft-ietf-avtcore-rtp-over-quic]
              Ott, J., Engelbart, M., and S. Dawkins, "RTP over QUIC
              (RoQ)", Work in Progress, Internet-Draft, draft-ietf-
              avtcore-rtp-over-quic-10, 8 May 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-avtcore-
              rtp-over-quic-10>.

   [I-D.draft-ietf-quic-qlog-main-schema]
              Marx, R., Niccolini, L., Seemann, M., and L. Pardue, "Main
              logging schema for qlog", Work in Progress, Internet-
              Draft, draft-ietf-quic-qlog-main-schema-08, 4 March 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-quic-
              qlog-main-schema-08>.

   [I-D.draft-ietf-quic-qlog-quic-events]
              Marx, R., Niccolini, L., Seemann, M., and L. Pardue, "QUIC
              event definitions for qlog", Work in Progress, Internet-
              Draft, draft-ietf-quic-qlog-quic-events-07, 4 March 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-quic-
              qlog-quic-events-07>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC8610]  Birkholz, H., Vigano, C., and C. Bormann, "Concise Data
              Definition Language (CDDL): A Notational Convention to
              Express Concise Binary Object Representation (CBOR) and
              JSON Data Structures", RFC 8610, DOI 10.17487/RFC8610,
              June 2019, <https://www.rfc-editor.org/rfc/rfc8610>.

Acknowledgments

   The authors would like to thank Lucas Pardue for their valuable
   comments and suggestions contributing to this document.

Authors' Addresses

   Mathis Engelbart
   Technical University of Munich
   Email: mathis.engelbart@gmail.com


   Jörg Ott
   Technical University of Munich
   Email: ott@in.tum.de
